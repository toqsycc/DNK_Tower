#pragma once

//#ifdef COMPILE_FOR_MEGA2560

#include <Arduino.h>

/*
  Класс HSL позволяет приводить трёхмерное пространство цветов RGB
  к линейному, заданному параметром оттенка Hue [0.0; 1.0]
  Параметры Saturation и Ligtness рекомендуется оставлять равными
  1.0 и 0.5 соответственно.
  Разница между основными цветами составляет 30 градусов, смотри
  ниже:
  Красный               Зелёный                 Синий                   Красный
  |   Оранжевый         |     Весенний зелёный  |     Фиолетовый        |
  |   |     Жёлтый      |     |     Циан        |     |     Маджента    |
  |   |     |     Зелёный шартрез   |     Лазурь|     |     |     Роуз  |
  |   |     |     |     |     |     |     |     |     |     |     |     |
  0   30    60    90    120   150   180   210   240   270   300   330   360
  Saturation [0.0; 1.0] отвечает за цветовую насыщенность заданного
  параметром Hue оттенка. Чем он ниже, тем ближе цветовой диапазон
  Hue к градациям серого.
  Lightness [0.0; 1.0] отвечает за яркость заданного параметрами
  Hue и Saturation оттенка. Чем больше отклонение от 0.5 к 0.0,
  тем больше процент сложения заданного оттенка с чёрным. При
  отклонении к 1.0 соответственно заданный оттенок складывается
  с белым.
  [!] Функция RecastIntoInterval вычисляет процентное соотношение
  заданного числа от максимального, фактически эта функция
  является частью данного класса, но для лучшей читаемости кода
  её пришлось вынести. Функция абсолютно универсальна.
  [!] Стоит понимать, что в случае RGB светодиодов, чёрный цвет
  обозначает полное их отключение, а градации серого будут
  представлять из себя тусклое свечение трёх базовых цветов.
  Исходя из этого выведены рекомендации к значениям параметров
  Saturation и Lightness. Однако, это не означает запрет на
  эксперименты со значениями - ничего не будет выведено из строя
  "волшебной" комбинацией чисел.

  Методы:
    Общедоступные
    - HSL() / без параметров / - инициализирует пустой объект класса
    - HSL(h, s, l) - инициализирует объект класса с заданными параметрами
    - getColorInfoRGB() - возвращает данные об оттенке в формате RGB
    Внутренние
    - HueToRGB(p, q, t) - конвертирует оттенок в данные формата RGB
    Это необходимо для упрощения работы контроллера со светодиодами
    посредством широтно-импульсной модуляции. Используется только в
    конструкторе класса
*/
class HSL
{
private:
    byte* colorInfo;
    double HueToRGB(double, double, double);

public:
    HSL(double h = 0.0, double s = 0.0, double l = 0.0);
    ~HSL();
    inline byte* getColorInfoRGB()
    {
        return this->colorInfo;
    }
};

//#endif